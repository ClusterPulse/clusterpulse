FROM python:3.11.9-slim AS builder

# Install build dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements
COPY ./policy-controller/requirements.txt ./

# Install Python dependencies to a specific location
RUN pip install --no-cache-dir --prefix=/install -r requirements.txt

# Final stage
FROM python:3.11.9-slim

# Add metadata labels
LABEL maintainer="asmoore@redhat.com" \
      version="1.0.0" \
      description="Main API Service"

# Install runtime dependencies and clean up
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Set working directory
WORKDIR /app

# Copy Python dependencies from builder
COPY --from=builder --chown=1001:0 /install /usr/local

# Copy application code with proper permissions
COPY --chown=1001:0 ./policy-controller/policy_controller.py .

# Create directories that might need write access
RUN mkdir -p /app/logs /app/tmp && \
    chgrp -R 0 /app && \
    chmod -R g=u /app && \
    chmod g+w /app /app/logs /app/tmp

# Set environment variables
ENV PATH=/usr/local/bin:$PATH \
    PYTHONPATH=/app \
    PYTHONUNBUFFERED=1 \
    HOME=/app

# Use numeric UID
USER 1001

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Run the application
CMD ["python", "policy_controller.py"]
